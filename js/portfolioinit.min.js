// Dependencies: shuffle.min.js

"use strict";

var Shuffle = window.shuffle;

var InitShuffle = function (element) {
	this.element = element;

	this.shuffle = new Shuffle(element, {
		itemSelector: '.portfolio-item',
		sizer: null,//element.querySelector('.my-sizer-element'),
	});

	this._activeFilters = [];

	this.addFilterButtons();
};

InitShuffle.prototype.toArray = function (arrayLike) {
	return Array.prototype.slice.call(arrayLike);
};

InitShuffle.prototype.addFilterButtons = function () {
	var options = document.querySelector('.filter-options');

	if (!options) {
		return;
	}

	var filterButtons = this.toArray(
		options.children
	);

	filterButtons.forEach(function (button) {
		button.addEventListener('click', this._handleFilterClick.bind(this), false);
	}, this);
};

InitShuffle.prototype._handleFilterClick = function (evt) {
	var btn = evt.currentTarget,
		isActive = btn.classList.contains('active'),
		btnGroup = btn.getAttribute('data-group'),
		filterGroup

	this._removeActiveClassFromChildren(btn.parentNode);

	if (isActive) {
		btn.classList.remove('active');
		filterGroup = Shuffle.ALL_ITEMS;
	} else {
		btn.classList.add('active');
		filterGroup = btnGroup;
	}

	this.shuffle.filter(filterGroup);
};

InitShuffle.prototype._removeActiveClassFromChildren = function (parent) {
	var children = parent.children;
	for (var i = children.length - 1; i >= 0; i--) {
		children[i].classList.remove('active');
	}
};

document.addEventListener('DOMContentLoaded', function () {
	window.InitShuffle = new InitShuffle(document.getElementById('portfolio-list'));
});